porté lexical sans réadressage.
* variable interfacer provenant du C
& variable interfacer provenant du script (porter global post declaration)
$ variable local
! fonction
? condition

interupteur :
! et opérateur

variable :
* & $

opérateur :
+ - * / % =

opérateur logique :
== > < ~= <= >=

= $var1$ + *var2* &var3&;
!add ($var1$ *var2*);
= $var1$ ?add (*var2* &var3& $var4$);
?if == $var1$ + *var2* &var3&;
{;
	bloc executer;
};

a check en premier caractère de ligne :
+ - * / % = ? !
=> passé la ligne a la fonction correspondante et parsé le reste
si variable => cherché la variable
si interrupteur => executer la demande

Si rien est trouver => erreur, pas de pitié, pas de flexibilité

sur condition :
si aprés ligne = '{' => executer ligne par ligne jusqu'a '}'
si while, revenir avant '{' et refaire condition
sinon execution directe

sur fonction : cherché la fonction, lui attribué les variable jusqu'a ')'
